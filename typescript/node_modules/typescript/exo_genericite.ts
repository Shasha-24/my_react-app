/*----- Exercice 1-----*/

function identite<T>(valeur: T): T {
    return valeur;
}
const nombre: number = 24;
const resultatNombre = identite(nombre);
console.log(resultatNombre);

const chaine: string = "hola bro";
const resultatChaine = identite(chaine);
console.log(resultatChaine);

const tableau: number[] = [1, 2, 3];
const resultatTableau = identite(tableau);
console.log(resultatTableau);







/*----- Exercice 2-----*/

function longueurTableau<T>(arr: T[]): number {
    return arr.length;
}

const nombres: number[] = [1, 2, 3, 4, 5];
const longueurNombres = longueurTableau(nombres);
console.log(longueurNombres);

const chaines: string[] = ['comment tu va ?', 'super et toi ?'];
const longueurChaines = longueurTableau(chaines);
console.log(longueurChaines);

const booleens: boolean[] = [true, false, true];
const longueurBooleens = longueurTableau(booleens);
console.log(longueurBooleens);









/*----- Exercice 3-----*/

function rechercherElement<T>(arr: T[], element: T): number {
    return arr.indexOf(element);
}

const nombrres: number[] = [1, 2, 3, 4, 5];
const positionNombre = rechercherElement(nombres, 3);
console.log(positionNombre);

const cha√Ænes: string[] = ['hey', 'blg'];
const positionChaine = rechercherElement(chaines, 'World');
console.log(positionChaine);

const booleeens: boolean[] = [true, false, true];
const positionBooleen = rechercherElement(booleens, false);
console.log(positionBooleen);

const objets: { id: number; nom: string }[] = [
    { id: 1, nom: 'Objet 1' },
    { id: 2, nom: 'Objet 2' },
];
const elementObjet = { id: 2, nom: 'Objet 2' };
const positionObjet = rechercherElement(objets, elementObjet);
console.log(positionObjet);













/*----- Exercice 4----*/

class Pile<T> {
    private elements: T[];

    constructor() {
        this.elements = [];
    }

    empiler(element: T): void {
        this.elements.push(element);
    }

    depiler(): T | undefined {
        return this.elements.pop();
    }
}
const pile = new Pile<number>();
pile.empiler(1);pile.empiler(2);pile.empiler(3);

console.log(pile.depiler()); console.log(pile.depiler()); console.log(pile.depiler()); 

const pileChaines = new Pile<string>();
pileChaines.empiler("salut");
pileChaines.empiler("les kheys");

console.log(pileChaines.depiler()); console.log(pileChaines.depiler()); 



/*---- Exercice 5-----*/

interface Pair<T, U> {
    premier: T;
    deuxieme: U;
}

const paire: Pair<number, string> = {
    premier: 62,
    deuxieme: "bijourrr"
};

console.log(paire.premier);
console.log(paire.deuxieme);


